<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true">
	<!--<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="C:\\app\\wwwroot\\Logfiles\\internal-nlog-OH.txt">-->

	<!-- enable asp.net core layout renderers -->
	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
	</extensions>

	<!-- the targets to write to -->
	<targets>
		<!-- File Target for all log messages with basic details -->
		<!--<target xsi:type="File" name="allfile" fileName="C:\\app\\wwwroot\\Logfiles\\nlog-OH-all-${shortdate}.log"
				layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />-->

		<!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
		<!--<target xsi:type="File" name="ownFile-web" fileName="C:\\app\\wwwroot\\Logfiles\\nlog-OH-own-${shortdate}.log"
				layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}|${callsite}| body: ${aspnet-request-posted-body}" />-->

		<!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
		<!--<target xsi:type="Console" name="lifetimeConsole" layout="${MicrosoftConsoleLayout}" />-->
		<target name="consoleTarget" xsi:type="ColoredConsole" layout="${longdate} level=${level} message=${message}">
			<highlight-word foregroundColor="Green" regex="Hello World"/>
			<highlight-row condition="level == LogLevel.Trace" foregroundColor="NoChange" />
			<highlight-row condition="level == LogLevel.Debug" foregroundColor="NoChange" />
			<highlight-row condition="level == LogLevel.Info" foregroundColor="NoChange" />
			<highlight-row condition="level == LogLevel.Warn" foregroundColor="Yellow" />
			<highlight-row condition="level == LogLevel.Error" foregroundColor="NoChange" backgroundColor="DarkRed" />
		</target>
	</targets>

	<!-- rules to map from logger name to target -->
	<rules>
		<!--All logs, including from Microsoft-->
		<!--<logger name="*" minlevel="Trace" writeTo="allfile" />-->

		<!--Output hosting lifetime messages to console target for faster startup detection -->
		<!--<logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="lifetimeConsole, ownFile-web" final="true" />-->

		<!--Skip non-critical Microsoft logs and so log only own logs (BlackHole) -->
		<!--<logger name="Microsoft.*" maxlevel="Info" final="true" />-->
		<!--<logger name="System.Net.Http.*" maxlevel="Info" final="true" />-->

		<!--<logger name="*" minlevel="Trace" writeTo="ownFile-web" />-->
		<logger name="*" minlevel="Trace" writeTo="consoleTarget" />
	</rules>
</nlog>